#!/usr/bin/env python3
"""
üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê API ECONOMY
–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—á–µ–º—É –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –º–∞—Ç—á–µ–π
"""

import requests
import json
import os
from datetime import datetime
from api_economy_patch import init_api_economy, economical_tennis_request, get_api_usage

def test_api_economy_step_by_step():
    """–ü–æ—à–∞–≥–æ–≤–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ API Economy"""
    
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê API ECONOMY –°–ò–°–¢–ï–ú–´")
    print("=" * 60)
    print(f"üïê –í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print("=" * 60)
    
    # –®–∞–≥ 1: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    print("\n1Ô∏è‚É£ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø API ECONOMY")
    try:
        init_api_economy(
            api_key="a1b20d709d4bacb2d95ddab880f91009",
            max_per_hour=30,
            cache_minutes=20
        )
        print("‚úÖ API Economy –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
        return False
    
    # –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    print("\n2Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –¢–ï–ö–£–©–ï–ô –°–¢–ê–¢–ò–°–¢–ò–ö–ò")
    try:
        usage = get_api_usage()
        print(f"üìä –ó–∞–ø—Ä–æ—Å–æ–≤ –≤ —á–∞—Å: {usage.get('requests_this_hour', 0)}/{usage.get('max_per_hour', 30)}")
        print(f"üìä –û—Å—Ç–∞–µ—Ç—Å—è –∑–∞–ø—Ä–æ—Å–æ–≤: {usage.get('remaining_hour', 0)}")
        print(f"üìä –≠–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –∫–µ—à–µ: {usage.get('cache_items', 0)}")
        print(f"üìä –°—Ç–∞—Ç—É—Å —Ä—É—á–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {usage.get('manual_update_status', '–Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è')}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
    
    # –®–∞–≥ 3: –¢–µ—Å—Ç –ø—Ä—è–º–æ–≥–æ API –∑–∞–ø—Ä–æ—Å–∞
    print("\n3Ô∏è‚É£ –¢–ï–°–¢ –ü–†–Ø–ú–û–ì–û API –ó–ê–ü–†–û–°–ê")
    try:
        api_key = "a1b20d709d4bacb2d95ddab880f91009"
        url = "https://api.the-odds-api.com/v4/sports/tennis/odds"
        params = {
            'apiKey': api_key,
            'regions': 'us,uk,eu',
            'markets': 'h2h',
            'oddsFormat': 'decimal',
            'dateFormat': 'iso'
        }
        
        print(f"üåê –ó–∞–ø—Ä–æ—Å –∫: {url}")
        print(f"üîë API –∫–ª—é—á: {api_key[:10]}...{api_key[-5:]}")
        
        response = requests.get(url, params=params, timeout=10)
        
        print(f"üìä HTTP —Å—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"üìä Headers: {dict(response.headers)}")
        
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ API –æ—Ç–≤–µ—á–∞–µ—Ç! –ü–æ–ª—É—á–µ–Ω–æ {len(data)} –º–∞—Ç—á–µ–π")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∞—Ç—á–µ–π
            for i, match in enumerate(data[:3], 1):
                print(f"   {i}. {match.get('home_team', 'N/A')} vs {match.get('away_team', 'N/A')}")
                print(f"      –ù–∞—á–∞–ª–æ: {match.get('commence_time', 'N/A')}")
                print(f"      –ë—É–∫–º–µ–∫–µ—Ä–æ–≤: {len(match.get('bookmakers', []))}")
        
        elif response.status_code == 401:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á!")
            return False
        elif response.status_code == 422:
            print("‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è tennis (–º–∞—Ç—á–µ–π –Ω–µ—Ç)")
        else:
            print(f"‚ùå API –æ—à–∏–±–∫–∞: {response.status_code}")
            print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä—è–º–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞: {e}")
    
    # –®–∞–≥ 4: –¢–µ—Å—Ç —á–µ—Ä–µ–∑ API Economy
    print("\n4Ô∏è‚É£ –¢–ï–°–¢ –ß–ï–†–ï–ó API ECONOMY")
    try:
        result = economical_tennis_request('tennis', force_fresh=True)
        
        print(f"üìä –£—Å–ø–µ—Ö: {result.get('success', False)}")
        print(f"üìä –ò—Å—Ç–æ—á–Ω–∏–∫: {result.get('source', 'unknown')}")
        print(f"üìä –°—Ç–∞—Ç—É—Å: {result.get('status', 'unknown')}")
        print(f"üìä –≠–º–æ–¥–∑–∏: {result.get('emoji', 'none')}")
        
        if result.get('success'):
            data = result.get('data', [])
            print(f"‚úÖ API Economy —Ä–∞–±–æ—Ç–∞–µ—Ç! –ü–æ–ª—É—á–µ–Ω–æ {len(data)} –º–∞—Ç—á–µ–π")
            
            if data:
                # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–π –º–∞—Ç—á
                first_match = data[0]
                print(f"\nüìã –ê–ù–ê–õ–ò–ó –ü–ï–†–í–û–ì–û –ú–ê–¢–ß–ê:")
                print(f"   ID: {first_match.get('id', 'N/A')}")
                print(f"   –ò–≥—Ä–æ–∫–∏: {first_match.get('home_team', 'N/A')} vs {first_match.get('away_team', 'N/A')}")
                print(f"   –°–ø–æ—Ä—Ç: {first_match.get('sport_title', 'N/A')}")
                print(f"   –ë—É–∫–º–µ–∫–µ—Ä–æ–≤: {len(first_match.get('bookmakers', []))}")
                
                # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã
                bookmakers = first_match.get('bookmakers', [])
                if bookmakers:
                    first_bookmaker = bookmakers[0]
                    print(f"   –ü–µ—Ä–≤—ã–π –±—É–∫–º–µ–∫–µ—Ä: {first_bookmaker.get('title', 'N/A')}")
                    
                    markets = first_bookmaker.get('markets', [])
                    if markets:
                        h2h_market = None
                        for market in markets:
                            if market.get('key') == 'h2h':
                                h2h_market = market
                                break
                        
                        if h2h_market:
                            outcomes = h2h_market.get('outcomes', [])
                            print(f"   –ò—Å—Ö–æ–¥–æ–≤ –≤ H2H: {len(outcomes)}")
                            for outcome in outcomes:
                                print(f"     {outcome.get('name', 'N/A')}: {outcome.get('price', 'N/A')}")
                        else:
                            print("   ‚ùå –ù–µ—Ç H2H —Ä—ã–Ω–∫–∞")
                    else:
                        print("   ‚ùå –ù–µ—Ç —Ä—ã–Ω–∫–æ–≤")
                else:
                    print("   ‚ùå –ù–µ—Ç –±—É–∫–º–µ–∫–µ—Ä–æ–≤")
            else:
                print("‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ –ø—É—Å—Ç—ã–µ")
        else:
            error = result.get('error', 'Unknown error')
            print(f"‚ùå API Economy –æ—à–∏–±–∫–∞: {error}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ API Economy —Ç–µ—Å—Ç–∞: {e}")
    
    # –®–∞–≥ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö —Å–ø–æ—Ä—Ç–æ–≤
    print("\n5Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–´–• –¢–ï–ù–ù–ò–°–ù–´–• –ö–õ–Æ–ß–ï–ô")
    tennis_keys = ['tennis_atp', 'tennis_wta', 'tennis_atp_wimbledon', 'tennis_wta_wimbledon']
    
    for sport_key in tennis_keys:
        try:
            print(f"\nüéæ –¢–µ—Å—Ç {sport_key}:")
            result = economical_tennis_request(sport_key)
            
            if result.get('success'):
                data = result.get('data', [])
                print(f"   ‚úÖ {len(data)} –º–∞—Ç—á–µ–π")
            else:
                print(f"   ‚ùå {result.get('error', 'No data')}")
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –®–∞–≥ 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
    print("\n6Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –°–û–ó–î–ê–ù–ù–´–• –§–ê–ô–õ–û–í")
    files_to_check = ['api_usage.json', 'api_cache.json', 'manual_update_trigger.json']
    
    for filename in files_to_check:
        if os.path.exists(filename):
            try:
                with open(filename, 'r') as f:
                    data = json.load(f)
                print(f"‚úÖ {filename}: {len(str(data))} —Å–∏–º–≤–æ–ª–æ–≤")
            except Exception as e:
                print(f"‚ùå {filename}: –æ—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è - {e}")
        else:
            print(f"‚ö™ {filename}: –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    print("\n" + "=" * 60)
    print("üéØ –í–´–í–û–î–´ –ò –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    print("=" * 60)
    
    return True

def suggest_fixes():
    """–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é"""
    print("\nüí° –í–û–ó–ú–û–ñ–ù–´–ï –†–ï–®–ï–ù–ò–Ø:")
    print("1. –ï—Å–ª–∏ API –∫–ª—é—á –Ω–µ–≤–µ—Ä–Ω—ã–π - –ø–æ–ª—É—á–∏—Ç–µ –Ω–æ–≤—ã–π –Ω–∞ the-odds-api.com")
    print("2. –ï—Å–ª–∏ –Ω–µ—Ç –º–∞—Ç—á–µ–π - –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ –≤—Ä–µ–º—è –¥–Ω—è")
    print("3. –ï—Å–ª–∏ –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç - –ø–æ–¥–æ–∂–¥–∏—Ç–µ —á–∞—Å –∏–ª–∏ —Å–º–µ–Ω–∏—Ç–µ –∫–ª—é—á")
    print("4. –ï—Å–ª–∏ –æ—à–∏–±–∫–∏ API - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ")
    print("5. –ï—Å–ª–∏ –º–∞—Ç—á–∏ –µ—Å—Ç—å –Ω–æ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è - –ø—Ä–æ–±–ª–µ–º–∞ –≤ —Ñ–∏–ª—å—Ç—Ä–∞—Ö")
    
    print("\nüîß –î–ï–ô–°–¢–í–ò–Ø –î–õ–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:")
    print("‚Ä¢ –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python manual_update.py full")
    print("‚Ä¢ –ò–ª–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ –Ω–∞–∂–º–∏—Ç–µ 'Force API Update'")
    print("‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ backend'–∞ –Ω–∞ –æ—à–∏–±–∫–∏")
    print("‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ä–∞–∑–Ω—ã–µ tennis –∫–ª—é—á–∏ (tennis_atp, tennis_wta)")

if __name__ == "__main__":
    try:
        test_api_economy_step_by_step()
        suggest_fixes()
    except Exception as e:
        print(f"\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()