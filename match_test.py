#!/usr/bin/env python3
"""
üéæ –¢–ï–°–¢ UNDERDOG –°–ò–°–¢–ï–ú–´ –ù–ê –†–ï–ê–õ–¨–ù–û–ú –ú–ê–¢–ß–ï
Cobolli vs Djokovic - –∏–¥–µ–∞–ª—å–Ω—ã–π underdog —Å–ª—É—á–∞–π
"""

def test_cobolli_vs_djokovic():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º underdog –∞–Ω–∞–ª–∏–∑ –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–º –º–∞—Ç—á–µ"""
    
    print("üéæ –¢–ï–°–¢ –†–ï–ê–õ–¨–ù–û–ì–û –ú–ê–¢–ß–ê: Cobolli vs Djokovic")
    print("=" * 60)
    
    # –î–∞–Ω–Ω—ã–µ –∏–∑ –≤–∞—à–µ–≥–æ api_cache.json
    print("üìä –î–ê–ù–ù–´–ï –ò–ó API:")
    print("   –ë—É–∫–º–µ–∫–µ—Ä—ã: 21 –∫–æ–º–ø–∞–Ω–∏—è")
    print("   –õ—É—á—à–∏–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã:")
    print("     ‚Ä¢ Cobolli: 10.0 (BoyleSports)")
    print("     ‚Ä¢ Djokovic: 1.05 (Unibet)")
    print("   –ü–æ–¥—Ä–∞–∑—É–º–µ–≤–∞–µ–º—ã–µ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏:")
    print("     ‚Ä¢ Cobolli: 10.0%")
    print("     ‚Ä¢ Djokovic: 95.2%")
    
    print(f"\nü§ñ –¢–ï–°–¢ UNDERDOG –°–ò–°–¢–ï–ú–´:")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤–∞—à—É underdog —Å–∏—Å—Ç–µ–º—É
        import tennis_backend as tb
        
        # –°–æ–∑–¥–∞–µ–º –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä
        analyzer = tb.UnderdogAnalyzer()
        print("‚úÖ UnderdogAnalyzer –∑–∞–≥—Ä—É–∂–µ–Ω")
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–π—Ç–∏–Ω–≥–∏
        cobolli_rank = analyzer.get_player_ranking('Flavio Cobolli')
        djokovic_rank = analyzer.get_player_ranking('Novak Djokovic')
        
        print(f"üìä –†–µ–π—Ç–∏–Ω–≥–∏ –∏–≥—Ä–æ–∫–æ–≤:")
        print(f"   ‚Ä¢ Flavio Cobolli: #{cobolli_rank}")
        print(f"   ‚Ä¢ Novak Djokovic: #{djokovic_rank}")
        print(f"   ‚Ä¢ –†–∞–∑–Ω–æ—Å—Ç—å: {cobolli_rank - djokovic_rank} –ø–æ–∑–∏—Ü–∏–π")
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º underdog —Å—Ü–µ–Ω–∞—Ä–∏–π
        scenario = analyzer.identify_underdog_scenario('Flavio Cobolli', 'Novak Djokovic')
        
        print(f"\nüéØ UNDERDOG –°–¶–ï–ù–ê–†–ò–ô:")
        print(f"   Underdog: {scenario['underdog']} (#{scenario['underdog_rank']})")
        print(f"   Favorite: {scenario['favorite']} (#{scenario['favorite_rank']})")
        print(f"   –¢–∏–ø underdog: {scenario['underdog_type']}")
        print(f"   –ë–∞–∑–æ–≤–∞—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å: {scenario['base_probability']:.1%}")
        
        # –ü–æ–ª–Ω—ã–π ML –∞–Ω–∞–ª–∏–∑
        analysis = analyzer.calculate_underdog_probability(
            'Flavio Cobolli', 'Novak Djokovic', 
            'ATP Tournament', 'Hard'
        )
        
        print(f"\nü§ñ ML –ê–ù–ê–õ–ò–ó UNDERDOG:")
        print(f"   –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –≤–∑—è—Ç—å —Å–µ—Ç: {analysis['underdog_probability']:.1%}")
        print(f"   –ö–∞—á–µ—Å—Ç–≤–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏: {analysis['quality']}")
        print(f"   –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {analysis['confidence']}")
        print(f"   ML —Å–∏—Å—Ç–µ–º–∞: {analysis['ml_system_used']}")
        
        print(f"\nüí∞ –°–†–ê–í–ù–ï–ù–ò–ï –° –ë–£–ö–ú–ï–ö–ï–†–ê–ú–ò:")
        
        # –ë—É–∫–º–µ–∫–µ—Ä—Å–∫–∞—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å
        bookmaker_prob = 0.10  # 10% –æ—Ç –∫–æ—ç—Ñ. 10.0
        ml_prob = analysis['underdog_probability']
        
        print(f"   –ë—É–∫–º–µ–∫–µ—Ä—ã –¥–∞—é—Ç Cobolli: 10.0% —à–∞–Ω—Å")
        print(f"   –ù–∞—à–∞ ML —Å–∏—Å—Ç–µ–º–∞: {ml_prob:.1%} —à–∞–Ω—Å –≤–∑—è—Ç—å —Å–µ—Ç")
        
        # Value betting –∞–Ω–∞–ª–∏–∑
        edge = ml_prob - bookmaker_prob
        
        if edge > 0.05:  # –ë–æ–ª—å—à–µ 5% –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞
            print(f"   üî• VALUE BET! –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ: +{edge:.1%}")
            print(f"   üí∞ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –°–¢–ê–í–ò–¢–¨ –Ω–∞ Cobolli")
        elif edge > 0:
            print(f"   üí° –ù–µ–±–æ–ª—å—à–æ–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ: +{edge:.1%}")
        else:
            print(f"   ‚ö†Ô∏è –ë—É–∫–º–µ–∫–µ—Ä—ã –ø—Ä–∞–≤—ã, –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –Ω–µ—Ç: {edge:.1%}")
        
        print(f"\nüéØ –ö–õ–Æ–ß–ï–í–´–ï –§–ê–ö–¢–û–†–´:")
        for factor in analysis['key_factors']:
            print(f"   ‚Ä¢ {factor}")
        
        return {
            'bookmaker_probability': bookmaker_prob,
            'ml_probability': ml_prob,
            'edge': edge,
            'recommendation': 'BET' if edge > 0.05 else 'PASS',
            'quality': analysis['quality']
        }
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return None

def test_value_betting_workflow():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π workflow –ø–æ–∏—Å–∫–∞ value bets"""
    
    print(f"\n" + "=" * 60)
    print("üí∞ –¢–ï–°–¢ –ü–û–õ–ù–û–ì–û VALUE BETTING WORKFLOW")
    print("=" * 60)
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∞—Ç—á–µ–π —Å —Ä–∞–∑–Ω—ã–º–∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞–º–∏
    test_matches = [
        {
            'player1': 'Flavio Cobolli',
            'player2': 'Novak Djokovic', 
            'odds1': 10.0,
            'odds2': 1.05,
            'tournament': 'ATP Masters',
            'surface': 'Hard'
        },
        {
            'player1': 'Brandon Nakashima',
            'player2': 'Carlos Alcaraz',
            'odds1': 3.5,
            'odds2': 1.25,
            'tournament': 'Wimbledon',
            'surface': 'Grass'
        }
    ]
    
    print("üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∞—Ç—á–µ–π –¥–ª—è value betting:")
    
    for i, match in enumerate(test_matches, 1):
        print(f"\nüéæ –ú–ê–¢–ß {i}: {match['player1']} vs {match['player2']}")
        print(f"   üìä –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã: {match['odds1']} vs {match['odds2']}")
        print(f"   üèüÔ∏è {match['tournament']} ({match['surface']})")
        
        # –ë—É–∫–º–µ–∫–µ—Ä—Å–∫–∞—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –¥–ª—è underdog
        bookmaker_prob = 1 / match['odds1']
        print(f"   üí∞ –ë—É–∫–º–µ–∫–µ—Ä—ã –¥–∞—é—Ç {match['player1']}: {bookmaker_prob:.1%}")
        
        try:
            import tennis_backend as tb
            analyzer = tb.UnderdogAnalyzer()
            
            analysis = analyzer.calculate_underdog_probability(
                match['player1'], match['player2'],
                match['tournament'], match['surface']
            )
            
            ml_prob = analysis['underdog_probability']
            edge = ml_prob - bookmaker_prob
            
            print(f"   ü§ñ –ù–∞—à–∞ ML —Å–∏—Å—Ç–µ–º–∞: {ml_prob:.1%}")
            print(f"   üìà –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ: {edge:+.1%}")
            
            if edge > 0.05:
                print(f"   üî• VALUE BET –ù–ê–ô–î–ï–ù!")
            elif edge > 0:
                print(f"   üí° –ù–µ–±–æ–ª—å—à–æ–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ")
            else:
                print(f"   ‚ùå –ù–µ—Ç –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞")
                
        except Exception as e:
            print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: {e}")

if __name__ == "__main__":
    print("üéæ –ü–û–õ–ù–´–ô –¢–ï–°–¢ UNDERDOG –°–ò–°–¢–ï–ú–´ –ù–ê –†–ï–ê–õ–¨–ù–´–• –î–ê–ù–ù–´–•")
    print("=" * 70)
    
    # –¢–µ—Å—Ç 1: –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –º–∞—Ç—á
    result = test_cobolli_vs_djokovic()
    
    # –¢–µ—Å—Ç 2: Value betting workflow  
    test_value_betting_workflow()
    
    print(f"\n" + "=" * 70)
    print("üìã –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:")
    
    if result:
        print(f"‚úÖ Underdog —Å–∏—Å—Ç–µ–º–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª–∞ —Ä–µ–∞–ª—å–Ω—ã–π –º–∞—Ç—á")
        print(f"üìä ML –¥–∞–µ—Ç {result['ml_probability']:.1%} vs –±—É–∫–º–µ–∫–µ—Ä—ã {result['bookmaker_probability']:.1%}")
        print(f"üí∞ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {result['recommendation']}")
        print(f"‚≠ê –ö–∞—á–µ—Å—Ç–≤–æ: {result['quality']}")
        
        if result['edge'] > 0.05:
            print(f"üéâ –°–ò–°–¢–ï–ú–ê –ù–ê–®–õ–ê VALUE BET –ù–ê –†–ï–ê–õ–¨–ù–û–ú –ú–ê–¢–ß–ï!")
        else:
            print(f"üìà –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –Ω–∞ —ç—Ç–æ–º –º–∞—Ç—á–µ –Ω–µ—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞")
    
    print(f"\nüöÄ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –î–õ–Ø –†–ï–ê–õ–¨–ù–û–ì–û –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø!")
    print(f"üí° –£ –≤–∞—Å –µ—Å—Ç—å live –¥–∞–Ω–Ω—ã–µ + ML –∞–Ω–∞–ª–∏–∑ = –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞!")